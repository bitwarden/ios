name: CI - main

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build-version:
        description: "Version Name Override - e.g. '2024.8.1'"
        type: string
      build-number:
        description: "Version Number Override - e.g. '1021'"
        type: number
      patch_version:
        description: "Patch Version Override - e.g. '999'"
        type: string

env:
  XCODE_VERSION: '15.4'

jobs:
  resolve-values:
    name: "Resolve values"
    runs-on: macos-14
    outputs:
      build_variant: ${{ steps.calculate.outputs.variant }}
      build_version: ${{ steps.calculate.outputs.version }}
      build_number: ${{ steps.calculate.outputs.build_number }}

    steps:
      - name: Test checks
        run: |
          echo "values build-number: ${{ inputs.build-number }}"
          echo "values build-version: ${{ inputs.build-version }}"

          echo "!build-number: ${{ !inputs.build-number }}"
          echo "!build-version: ${{ !inputs.build-version }}"
          echo "build-number == \"\": ${{ inputs.build-number == "" }}"
          echo "build-number == 0: ${{ inputs.build-number == 0 }}"
          echo "build-version == \"\" ${{ inputs.build-version == "" }}"

          echo "!build: ${{ !inputs.build-number && !inputs.build-version }}"
          echo "build aspas: ${{ inputs.build-number == "" && !inputs.build-version == "" }}"
          exit 1

      - name: Log inputs to job summary
        run: |
          echo "<details><summary>CI-main Workflow Inputs</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          echo '${{ toJson(inputs) }}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY

      - name: Calculate version
        if: ${{ !inputs.build-version && !inputs.build-number }}
        uses: bitwarden/ios/.github/actions/dispatch-and-download@main
        id: dispatch-version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: ios
          owner: bitwarden
          workflow: _version.yml
          workflow_inputs: '{"base_version_number": "1000", "version_name": "${{ inputs.build-version }}", "version_number": "${{ inputs.build-number }}", "patch_version": "${{ inputs.patch_version }}"}'

      - name: Read version info
        id: version_info
        run: |
          # test if dispatch-version was skipped. In that case, creates the same .json file expected by the Upload artifact step
          if [ ! -f version-info/version_info.json ]; then
            echo "::warning::version-version.json not found, was the previous step skipped? Creating a new file"
            json='{
              "version_number": "${{ inputs.build-number }}",
              "version_name": "${{ inputs.build-version }}"
            }'

            # file will be used by the upload step
            mkdir version-info
            echo "$json" > version-info/version_info.json
          else
              echo "::notice::version-version.json found!"
          fi

          content=$(cat version-info/version_info.json)
          echo "version_name=$(echo $content | jq -r .version_name)" >> $GITHUB_OUTPUT
          echo "version_number=$(echo $content | jq -r .version_number)" >> $GITHUB_OUTPUT
      - name: Upload version info artifact
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: version-info
          path: version-info/version_info.json

  build:
    name: Build
    needs: resolve-values
    uses: bitwarden/ios/.github/workflows/build.yml@main
    strategy:
      matrix:
        variant: [Beta, Production]
    with:
      build-variant: ${{ matrix.variant }}
      build-version: ${{ needs.resolve-values.outputs.version_name }}
      build-number: ${{ needs.resolve-values.outputs.version_number }}
      xcode-version: ${{ env.XCODE_VERSION }}
    secrets: inherit
